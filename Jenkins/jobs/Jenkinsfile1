import groovy.json.JsonSlurperClassic

def jsonParse(def json){
    new groovy.json.JsonSlurperClassic().parseText(json)
}

pipeline {
    agent any

    environment {
        SERVER_A = "64.23.151.32"    // Servidor origen
        SERVER_B = "186.4.199.239"   // Servidor destino
        USER_A   = "root"            // Usuario en Servidor A
        PORT_A   = "22"              // Puerto SSH para Servidor A (por defecto)
        PORT_B   = "10243"            // Puerto SSH para Servidor B
        LOCAL_FILE = "openbravo_20250826_1300.log"
    }

    stages {
        stage('Descargar desde Servidor A') {
            steps {
                sshagent(['openbravo1']) {
                    script {
                        echo "Descargando archivo desde Servidor A (${SERVER_A}:${PORT_A}) a Jenkins (Servidor C)"
                        
                        def fileA = "/srv/logsopenbravo/openbravo_20250826_1300.log"
                        
                        sh """
                            ssh-keygen -R ${SERVER_A} || true
                            scp -P ${PORT_A} -o StrictHostKeyChecking=no ${USER_A}@${SERVER_A}:${fileA} ${LOCAL_FILE}
                        """
                    }
                }
            }
        }

        stage('Subir a Servidor B') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'Server244',
                                                  usernameVariable: 'USER_B',
                                                  passwordVariable: 'PASS_B')]) {
                    script {
                        echo "Subiendo archivo desde Jenkins (Servidor C) a Servidor B (${SERVER_B}:${PORT_B})"
                        
                        def destB = "${USER_B}@${SERVER_B}:/home/compilacion/Temp/"
                        
                        sh """
                            ssh-keygen -R ${SERVER_B} || true
                            sshpass -p "$PASS_B" scp -P ${PORT_B} -o StrictHostKeyChecking=no ${LOCAL_FILE} ${destB}
                        """
                    }
                }
            }
        }

        stage('Limpieza en Jenkins') {
            steps {
                script {
                    echo "Eliminando archivo temporal en Jenkins"
                    sh "rm -f ${LOCAL_FILE}"
                }
            }
        }
    }
}
